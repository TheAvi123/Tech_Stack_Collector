{"version":3,"sources":["components/InputForm.js","components/TechCard.js","components/TechStack.js","components/TechPopUp.js","App.js","index.js"],"names":["InputForm","addTech","event","preventDefault","input_name","value","undefined","input_img","newTech","name","image","exp","input_exp","props","addToStack","console","log","bind","className","onSubmit","this","id","type","placeholder","ref","t_name","t_img","t_exp","React","Component","TechCard","useState","dragging","setDragging","dragNode","useRef","handleDragEnd","current","removeEventListener","onClick","openPopup","tech","draggable","onDragStart","e","target","addEventListener","setTimeout","setDragTech","onDragOver","onDrop","tempTech","dragTech","updateDragTech","date","handleDrop","src","alt","TechStack","state","createCard","techStack","stack","cardList","length","map","s_input","searchInput","onChange","searchStack","resetStack","stackItem","idx","setState","sourceTech","TechPopUp","closePopup","deleteTech","App","setStack","showPopup","setShowPopup","selectedTech","setSelectedTech","addTrigger","setAddTrigger","resetTrigger","setResetTrigger","deleteTrigger","setDeleteTrigger","searchTrigger","setSearchTrigger","useEffect","params","axios","post","SERVER","then","res","status","data","delete","get","togglePopup","input","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.343bf42b.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styling/InputForm.css';\r\n\r\nclass InputForm extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        // Bind functions to make sure this.addTech resolves correctly\r\n        this.addTech = this.addTech.bind(this); \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form\"> \r\n                <h3>Add New Technology</h3>\r\n                <form onSubmit={this.addTech}>\r\n                    <div className=\"inputs\">\r\n                        <input id=\"nameInput\" type=\"text\" placeholder=\"Tech Name\" \r\n                            ref={(t_name) => this.input_name = t_name}>\r\n                        </input>\r\n                        <input id=\"imageInput\" type=\"url\" placeholder=\"Tech Image URL\" \r\n                            ref={(t_img) => this.input_img = t_img}>\r\n                        </input>\r\n                        <select id=\"expInput\" ref={(t_exp) => this.input_exp = t_exp}>\r\n                            <option value=\"Beginner\">Beginner</option>\r\n                            <option value=\"Intermediate\">Intermediate</option>\r\n                            <option value=\"Advanced\">Advanced</option>\r\n                            <option value=\"Expert\">Expert</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <button id=\"addButton\" type=\"submit\">Add Technology</button>\r\n                        <button id=\"clearButton\" type=\"reset\">Reset Fields</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    addTech = (event) => {\r\n        // Prevent page from reloading\r\n        event.preventDefault();\r\n        // Error handling: checking for empty strings\r\n        if (this.input_name.value === \"\" || this.input_name.value === undefined) {\r\n            console.log(\"ERROR: Invalid Name\");\r\n            return;\r\n        }\r\n        if (this.input_img.value === \"\"  || this.input_img.value === undefined) {\r\n            console.log(\"ERROR: Invalid Image URL\");\r\n            return;\r\n        }\r\n        // Create new object for technology\r\n        let newTech = {\r\n            name: this.input_name.value,\r\n            image: this.input_img.value,\r\n            exp: this.input_exp.value\r\n        };\r\n        // Add new technology to state\r\n        this.props.addToStack(newTech);\r\n    }\r\n}\r\n\r\nexport default InputForm;","import React, {useState, useRef} from 'react';\r\nimport '../styling/TechCard.css';\r\n\r\nfunction TechCard(props) {\r\n\r\n    const [dragging, setDragging] = useState(false);\r\n\r\n    const dragNode = useRef();\r\n\r\n    const handleDragStart = (event, tech) => {\r\n        dragNode.current = event.target;\r\n        dragNode.current.addEventListener('dragend', handleDragEnd);\r\n        setTimeout(() => {\r\n            setDragging(true);\r\n            props.setDragTech(tech);\r\n        }, 0);\r\n    }\r\n\r\n    const handleDragOver = (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    const handleDrop = (event, tech) => {\r\n        event.preventDefault();\r\n        let tempTech = {...props.dragTech};\r\n        props.setDragTech(tech);\r\n        props.updateDragTech(tech);\r\n        tech.name = tempTech.name;\r\n        tech.image = tempTech.image;\r\n        tech.exp = tempTech.exp;\r\n        tech.date = tempTech.date;\r\n    }\r\n\r\n    const handleDragEnd = () => {\r\n        setDragging(false);\r\n        dragNode.current.removeEventListener('dragend', handleDragEnd);\r\n    }\r\n\r\n    const openCard = () => {\r\n        props.openPopup(props.tech);\r\n    }\r\n\r\n    return (\r\n        <li className={dragging ? \"dragCard techCard\" : \"techCard\"}\r\n            onClick={openCard} \r\n            draggable onDragStart={(e) => handleDragStart(e, props.tech)}\r\n            onDragOver={(e) => handleDragOver(e)}\r\n            onDrop={(e) => handleDrop(e, props.tech)}>\r\n            <label>{props.tech.name}</label>\r\n            <img draggable=\"false\" src={props.tech.image} alt=\"\"/>   \r\n        </li>\r\n    );\r\n}\r\n\r\nexport default TechCard;","import React from 'react';\r\nimport TechCard from './TechCard';\r\nimport '../styling/TechStack.css'\r\n\r\nconst EmptyStackMessage = \"This Stack is Empty!\"\r\n\r\nclass TechStack extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        // Set State\r\n        this.state = {\r\n            dragTech: null,\r\n            setDragTech: this.setDragTech,\r\n            updateDragTech: this.updateDragTech\r\n        }\r\n\r\n        // Bind functions to make sure this.openCard resolves correctly\r\n        this.createCard = this.createCard.bind(this); \r\n    };\r\n\r\n    render() {\r\n        let techStack = this.props.stack;\r\n        let cardList = techStack.length > 0 ? techStack.map(this.createCard) : (<label>{EmptyStackMessage}</label>); \r\n        return (\r\n            <div className=\"techStack\">\r\n                <h3 className=\"sectionText\">\r\n                    Tech Stack\r\n                </h3>\r\n                <form> \r\n                    <input type=\"text\" placeholder=\"Search\" \r\n                           ref={(s_input) => this.searchInput = s_input}\r\n                           onChange={(e) => {this.props.searchStack(this.searchInput.value)}}/>\r\n                </form>\r\n                <ul className=\"cardList\"> \r\n                    {cardList}\r\n                </ul>\r\n                <form>\r\n                    <button type=\"button\" onClick={this.props.resetStack}>Reset Stack</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    createCard(stackItem, idx) {\r\n        return (\r\n            <TechCard key={idx} tech={stackItem} \r\n                      openPopup={this.props.openPopup} \r\n                      dragTech={this.state.dragTech}\r\n                      setDragTech={this.state.setDragTech.bind(this)}\r\n                      updateDragTech={this.state.updateDragTech.bind(this)}/>\r\n        );\r\n    }\r\n\r\n    setDragTech(tech) {\r\n        this.setState({\r\n            dragTech: tech,\r\n            setDragTech: this.setDragTech,\r\n            updateDragTech: this.updateDragTech\r\n        });\r\n    }\r\n\r\n    updateDragTech(newTech) {\r\n        let sourceTech = this.state.dragTech;\r\n        sourceTech.name = newTech.name;\r\n        sourceTech.image = newTech.image;\r\n        sourceTech.exp = newTech.exp;\r\n        sourceTech.date = newTech.name;\r\n    }\r\n}\r\n\r\nexport default TechStack;","import React from 'react';\r\nimport '../styling/TechPopUp.css'\r\n\r\nclass TechPopUp extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"popup-bg\" onClick={this.props.closePopup}></div>  \r\n                <div className=\"popup-fg\">\r\n                    <label>{this.props.tech.name}</label>\r\n                    <img src={this.props.tech.image} alt=\"\"/>\r\n                    <label>Experience Level: {this.props.tech.exp}</label>\r\n                    <button className=\"delete-tech\" onClick={this.props.deleteTech}>DELETE</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TechPopUp;","import InputForm from './components/InputForm';\r\nimport TechStack from './components/TechStack';\r\nimport TechPopUp from './components/TechPopUp';\r\n\r\nimport React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst SERVER = \"/api\";\r\n\r\nfunction App() {\r\n\r\n\tconst [stack, setStack] = useState([]);\r\n\tconst [showPopup, setShowPopup] = useState(false);\r\n\tconst [selectedTech, setSelectedTech] = useState(null);\r\n\r\n\tconst [addTrigger, setAddTrigger] = useState(null);\r\n\tconst [resetTrigger, setResetTrigger] = useState(null);\r\n\tconst [deleteTrigger, setDeleteTrigger] = useState(null);\r\n\tconst [searchTrigger, setSearchTrigger] = useState(\"\");\r\n\r\n\t// useEffect(() => {  \r\n\t// \tgetCurrentStack();\r\n\t// }, []);\r\n\t\r\n\t// let getCurrentStack = () => {\r\n\t// \tconsole.log(\"Initiating GET Request\");\r\n    //     axios.get(SERVER + '/stack').then(res => {\t\r\n\t// \t\tconsole.log(\"Received GET Response\");\r\n\t// \t\tif (res.status === 200) {\r\n\t// \t\t\tsetStack(res.data.stack);\r\n\t// \t\t} else {\r\n\t// \t\t\tconsole.log(\"GET Request for Stack Failed:\");\r\n\t// \t\t\tconsole.log(res);\r\n\t// \t\t}\r\n\t// \t}); \r\n\t// };\r\n\r\n\tuseEffect(() => {  \r\n\t\tlet addToStack = () => {\r\n\t\t\tif (addTrigger) {\r\n\t\t\t\tconsole.log(\"Initiating POST Request\");\r\n\t\t\t\tlet params = addTrigger.name + '/';\r\n\t\t\t\tparams += addTrigger.exp + '/';\r\n\t\t\t\tparams += addTrigger.image;\r\n\t\t\t\taxios.post(SERVER + '/stack/' + params).then(res => {\r\n\t\t\t\t\tconsole.log(\"Received POST Response\");\r\n\t\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\t\tsetStack(res.data.stack);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(\"POST Request Failed:\");\r\n\t\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tsetAddTrigger(null);\r\n\t\t\t}\r\n\t\t}\r\n\t\taddToStack();\r\n\t}, [addTrigger]);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet resetStack = () => {\r\n\t\t\tif (resetTrigger) {\r\n\t\t\t\tconsole.log(\"Initiating Reset POST Request\");\r\n\t\t\t\taxios.post(SERVER + '/stack/reset').then(res => {\r\n\t\t\t\t\tconsole.log(\"Received POST Response\");\r\n\t\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\t\tsetStack(res.data.stack);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(\"POST Request Failed:\");\r\n\t\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tsetResetTrigger(null);\r\n\t\t\t}\r\n\t\t};\r\n\t\tresetStack();\r\n\t}, [resetTrigger]);\r\n\t\r\n\tuseEffect(() => { \r\n\t\tlet deleteTech = () => {\r\n\t\t\tif (selectedTech) {\r\n\t\t\t\tconsole.log(\"Initiating DELETE Request\");\r\n\t\t\t\taxios.delete(SERVER + '/stack/' + selectedTech.name).then(res => {\r\n\t\t\t\t\tconsole.log(\"Received DELETE Response\");\r\n\t\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\t\tsetStack(res.data.stack);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(\"DELETE Request Failed:\");\r\n\t\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tsetSelectedTech(null);\r\n\t\t\t\tsetShowPopup(false);\r\n\t\t\t}\r\n\t\t} \r\n\t\tdeleteTech();\r\n\t}, [deleteTrigger]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\tuseEffect(() => {  \r\n\t\tconsole.log(\"SEARCH STRING: \" + searchTrigger);\r\n\t\tlet getStack = () => {\r\n\t\t\tconsole.log(\"Initiating GET Request\");\r\n\t\t\taxios.get(SERVER + '/stack/' + searchTrigger).then(res => {\r\n\t\t\t\tconsole.log(\"Received GET Response\");\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\tsetStack(res.data.stack);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(\"GET Request Failed:\");\r\n\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tgetStack();\r\n\t}, [searchTrigger]);\r\n\r\n\tlet togglePopup = (selectedTech) => {\r\n\t\tif (showPopup) {\r\n\t\t\tsetSelectedTech(null);\r\n\t\t} else {\r\n\t\t\tsetSelectedTech(selectedTech);\r\n\t\t}\r\n\t\tsetShowPopup(!showPopup);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"app\">\r\n\t\t\t<h1>Tech Stack Collector</h1>\r\n\t\t\t<InputForm addToStack={(newTech) => {setAddTrigger(newTech)}}/>\r\n\t\t\t<TechStack stack={stack} \r\n\t\t\t    \t   openPopup={togglePopup.bind(this)}\r\n\t\t\t           searchStack={(input) => {setSearchTrigger(input)}}\r\n\t\t\t\t\t   resetStack={() => {setResetTrigger(1)}}/>\r\n\t\t\t{\r\n\t\t\t\tshowPopup && \r\n\t\t\t\t<TechPopUp tech={selectedTech} \r\n\t\t\t\t\t\t   closePopup={togglePopup.bind(this)}\r\n\t\t\t\t\t\t   deleteTech={() => {setDeleteTrigger(!deleteTrigger)}}/>\r\n\t\t\t}\r\n    \t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}